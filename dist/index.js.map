{"version":3,"file":"index.js","sources":["../src/tools/Utils.js","../src/tools/constants.js","../src/tools/MonthStructure.js","../src/tools/Processing.js","../src/view/Title.js","../src/context.js","../src/view/styledDaysMap.js","../src/view/Day.js","../src/view/Week.js","../src/view/Month.js","../src/Calendar.js","../src/index.js"],"sourcesContent":["export function ucfirst(str) {\r\n    return `${ str.charAt(0).toUpperCase() }${ str.slice(1) }`;\r\n}\r\n\r\nexport function calcParamsMatrix(date) {\r\n    // количество дней в указанном месяце\r\n    const countDays = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n    // индекс первого дня в неделе указанного месяца\r\n    const indexOfFirstDay = (new Date(date.getFullYear(), date.getMonth(), 1).getDay()) - 1;\r\n    // высота массива\r\n    const heightArray = Math.floor((countDays + indexOfFirstDay) / 7) + Number(((countDays + indexOfFirstDay) % 7) > 0);\r\n    // количество дней в предыдущем месяце\r\n    const lastDayPrevMonth = new Date(date.getFullYear(), date.getMonth(), 0).getDate();\r\n    // день, с которого начинается отсчет\r\n    const startMonth = indexOfFirstDay > 0 ? (new Date(date.setMonth(date.getMonth()-1))) : (new Date(date));\r\n    const startDay = new Date(startMonth.getFullYear(), startMonth.getMonth(), lastDayPrevMonth - indexOfFirstDay + 1);\r\n\r\n    return [\r\n        countDays,\r\n        indexOfFirstDay,\r\n        heightArray,\r\n        startDay\r\n    ];\r\n}\r\n\r\nexport function getTitles(data) {\r\n    return data.reduce((arr, el) => {\r\n        arr.push(el[0]);\r\n        return arr;\r\n    }, []);\r\n}\r\n\r\nexport function getKeyMonth(currentYear, date) {\r\n    const strMonth = date.toLocaleDateString('ru-RU', { month: 'long' });\r\n    let keyMonth = ucfirst(strMonth);\r\n    if (currentYear !== date.getFullYear()) {\r\n        keyMonth += `'${ date.getFullYear().toString().slice(2, 4) }`;\r\n    }\r\n    return keyMonth;\r\n}\r\n","export const DAY_STATE_NOT_AVAILABLE = 'not_available';\r\nexport const DAY_STATE_DISABLE = 'disable';\r\nexport const DAY_STATE_ACTIVE = 'active';","import {\r\n    DAY_STATE_NOT_AVAILABLE,\r\n    DAY_STATE_DISABLE,\r\n    DAY_STATE_ACTIVE\r\n} from \"./constants\";\r\nimport { calcParamsMatrix } from './Utils';\r\n\r\nfunction MonthStructure() {\r\n    this.days = [];\r\n    this.daysTemp = [];\r\n}\r\n\r\nMonthStructure.prototype.init = function (date) {\r\n    const [ countDays, indexOfFirstDay, heightArray, startDay ] = calcParamsMatrix(date);\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\r\n\r\n    for (let i = 0; i < heightArray; i++) {\r\n        this.days.push(Array(7));\r\n    }\r\n\r\n    for (let i = 0; i < (7 * heightArray); i++) {\r\n        const nextDay = new Date(startDay);\r\n        nextDay.setDate(startDay.getDate() + i);\r\n\r\n        let day = {\r\n            state: DAY_STATE_NOT_AVAILABLE,\r\n            today: Boolean(today.getTime() === nextDay.getTime()),\r\n            date: `${ nextDay.getFullYear() }-${ nextDay.getMonth() + 1 }-${ nextDay.getDate() }`,\r\n            day: nextDay.getDate(),\r\n            payload: null\r\n        };\r\n\r\n        if ((i >= indexOfFirstDay) && (i <= (indexOfFirstDay + countDays - 1))) {\r\n            day.state = DAY_STATE_DISABLE;\r\n        }\r\n\r\n        this.daysTemp.push(day);\r\n    }\r\n};\r\n\r\nMonthStructure.prototype.addDay = function (date, payload = null) {\r\n    const dayNum = date.getDate();\r\n    const i = this.daysTemp.findIndex(el => (el.state === DAY_STATE_DISABLE && el.day === dayNum));\r\n    this.daysTemp[i].state = DAY_STATE_ACTIVE;\r\n    this.daysTemp[i].date = `${ date.getFullYear() }-${ date.getMonth() + 1 }-${ date.getDate() }`;\r\n    this.daysTemp[i].payload = payload;\r\n};\r\n\r\nMonthStructure.prototype.processDays = function () {\r\n    let k = 0;\r\n    for (let i = 0; i < this.days.length; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n            this.days[i][j] = this.daysTemp[k];\r\n            k++;\r\n        }\r\n    }\r\n};\r\n\r\nexport default MonthStructure;\r\n","import { getKeyMonth } from './Utils';\r\nimport MonthStructure from './MonthStructure';\r\n\r\nexport const dataProcessing = (data) => {\r\n    let monthArray = [];\r\n    try {\r\n        const currentYear = (new Date()).getFullYear();\r\n\r\n        // заполняем пропущенные месяцы\r\n        const arrForGenerateEmptyMonth = generateArrMonth(data);\r\n\r\n        // наполняем месяцы\r\n        const monthMap = new Map();\r\n        for (const item of arrForGenerateEmptyMonth) {\r\n            const date = new Date(item);\r\n            const keyMonth = getKeyMonth(currentYear, date);\r\n            const m = addMonth(date);\r\n            monthMap.set(keyMonth, m);\r\n        }\r\n\r\n        // проставляем активные дни\r\n        for (const item of data) {\r\n            const date = new Date(item.date);\r\n            const keyMonth = getKeyMonth(currentYear, date);\r\n            const m = monthMap.get(keyMonth);\r\n            m.addDay(date, item);\r\n        }\r\n\r\n        // чистим служебные данные\r\n        monthArray = Array.from(monthMap);\r\n        monthArray.map(el => {\r\n            el[1].processDays();\r\n            delete el[1].daysTemp;\r\n        });\r\n    } catch (err) {\r\n        console.warn(err);\r\n    }\r\n\r\n    return monthArray;\r\n};\r\n\r\nconst addMonth = (date) => {\r\n    const m = new MonthStructure();\r\n    m.init(date);\r\n    return m;\r\n};\r\n\r\nexport const generateArrMonth = (data) => {\r\n    const month = [];\r\n    const tmp = [];\r\n    data.forEach(el => {\r\n        tmp.push(el.date);\r\n    });\r\n\r\n    tmp.sort();\r\n    if (tmp.length > 1) {\r\n        const firstYear = (new Date(tmp[0])).getFullYear();\r\n        const firstMonth = (new Date(tmp[0])).getMonth() + 1;\r\n        const lastYear = (new Date(tmp[tmp.length - 1])).getFullYear();\r\n        const lastMonth = (new Date(tmp[tmp.length - 1])).getMonth() + 1;\r\n\r\n        for (let y = firstYear; y <= lastYear; y++) {\r\n            let startM = 1;\r\n            let endM = 12;\r\n            if (y === firstYear) {\r\n                startM = firstMonth;\r\n            }\r\n            if (y === lastYear) {\r\n                endM = lastMonth;\r\n            }\r\n            for (let m = startM; m <= endM; m++) {\r\n                month.push(`${ y }-${ m }-1`);\r\n            }\r\n        }\r\n    } else {\r\n        month.push(tmp[0]);\r\n    }\r\n\r\n    return month;\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nconst Title = ({ titles, monthCount, activeMonth, setActiveMonth }) => {\r\n    const turnMonth = direction => {\r\n        if (direction === 'left') {\r\n            if (activeMonth > 0) {\r\n                setActiveMonth(activeMonth - 1);\r\n            }\r\n        } else {\r\n            if (activeMonth < monthCount - 1) {\r\n                setActiveMonth(activeMonth + 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getClasses = direction => {\r\n        let classes = 'btn btn-secondary px-2'\r\n        if (direction === 'left') {\r\n            if (activeMonth === 0) {\r\n                classes += ' disabled'\r\n            }\r\n        } else {\r\n            if (activeMonth === monthCount - 1) {\r\n                classes += ' disabled'\r\n            }\r\n        }\r\n        return classes\r\n    };\r\n\r\n    return (\r\n        <div className=\"row no-gutters align-items-center mb-4\">\r\n            <div className=\"col-auto\">\r\n                <button className={ getClasses('left') } onClick={ () => turnMonth('left') }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                         stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\"/>\r\n                    </svg>\r\n                    <span className=\"sr-only\">Предыдущий месяц</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"col px-3 text-lg text-center font-weight-medium\">{ titles[activeMonth] }</div>\r\n            <div className=\"col-auto\">\r\n                <button className={ getClasses('right') } onClick={ () => turnMonth('right') }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                         stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\"/>\r\n                    </svg>\r\n                    <span className=\"sr-only\">Следующий месяц</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;","import React, { createContext } from 'react';\r\n\r\nexport const Context = createContext({});\r\n\r\nexport const ContextProvider = ({ children, value }) => {\r\n    return <Context.Provider value={ value }>{ children }</Context.Provider>;\r\n};\r\n","import React from \"react\";\r\nimport {DAY_STATE_ACTIVE, DAY_STATE_DISABLE, DAY_STATE_NOT_AVAILABLE} from \"../tools/constants\";\r\n\r\nconst notAvailableDay = day => {\r\n    const classes = !day.today ? 'btn btn-lg btn-block disabled px-1' : 'btn btn-lg btn-block border-primary disabled px-1'\r\n    return <div className={ classes }>{day.day}</div>;\r\n};\r\n\r\nconst disableDay = day => {\r\n    const classes = !day.today ? 'btn btn-lg btn-block bg-light disabled px-1' : 'btn btn-lg btn-block bg-light border-primary disabled px-1'\r\n    return <div className={ classes }>{day.day}</div>;\r\n};\r\n\r\nconst activeDay = (day, dayClick) => {\r\n    const classes = !day.today ? 'btn btn-lg btn-block btn-primary-light px-1' : 'btn btn-lg btn-block btn-primary-light border-primary px-1'\r\n    return (\r\n        <button\r\n            onClick={ dayClick }\r\n            className={ classes }>\r\n            { day.day }\r\n        </button>\r\n    );\r\n};\r\n\r\nexport const styledDays = () => {\r\n    const days = new Map();\r\n    days.set(DAY_STATE_NOT_AVAILABLE, notAvailableDay);\r\n    days.set(DAY_STATE_DISABLE, disableDay);\r\n    days.set(DAY_STATE_ACTIVE, activeDay);\r\n    return days;\r\n};","import React, { useContext } from 'react';\r\nimport { Context } from '../context';\r\nimport { DAY_STATE_ACTIVE } from \"../tools/constants\";\r\nimport { styledDays } from \"./styledDaysMap\";\r\n\r\nconst Day = ({ data }) => {\r\n    const { onDayClick } = useContext(Context);\r\n    const days = styledDays();\r\n\r\n    const dayClick = () => {\r\n        if (data.state === DAY_STATE_ACTIVE && typeof onDayClick === 'function') {\r\n            onDayClick(data.date, data.payload);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col px-1\">\r\n            { (days.get(data.state))(data, dayClick) }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Day;","import React from 'react';\r\nimport Day from './Day';\r\n\r\nconst Week = ({ data }) => {\r\n    return (\r\n        <div className=\"row row-gutter-8 my-2\">\r\n            { data.map((day, i) => (\r\n                <Day key={ i } data={ day }/>\r\n            )) }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport Week from './Week';\r\n\r\nconst Month = ({ data }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"row no-gutters mb-3 text-xs text-muted text-center\">\r\n                <div className=\"col\">ПН</div>\r\n                <div className=\"col\">ВТ</div>\r\n                <div className=\"col\">СР</div>\r\n                <div className=\"col\">ЧТ</div>\r\n                <div className=\"col\">ПТ</div>\r\n                <div className=\"col\">СБ</div>\r\n                <div className=\"col\">ВС</div>\r\n            </div>\r\n            { data[1].days.map((week, i) => (\r\n                <Week key={ i } data={ week }/>\r\n            )) }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Month;\r\n","import React, { Fragment, useMemo, useState } from 'react';\r\nimport { dataProcessing } from './tools/Processing';\r\nimport { getTitles, getKeyMonth } from \"./tools/Utils\";\r\nimport Title from './view/Title';\r\nimport Month from './view/Month';\r\n\r\nexport const Calendar = ({ data, shiftToDate }) => {\r\n    const calendar = useMemo(() => dataProcessing(data), [ data ]);\r\n    const titles = getTitles(calendar);\r\n    const monthCount = calendar.length;\r\n\r\n    let initActiveMonth = 0;\r\n    if (typeof shiftToDate === 'string') {\r\n        try {\r\n            const keyMonthArray = getKeyMonth((new Date()).getFullYear(), (new Date(shiftToDate)));\r\n            initActiveMonth = calendar.findIndex(el => el[0] === keyMonthArray);\r\n        } catch (err) {\r\n            console.warn(err);\r\n        }\r\n    }\r\n\r\n    const [ activeMonth, setActiveMonth ] = useState(initActiveMonth);\r\n\r\n    return (\r\n        <div id=\"calendar\" className=\"my-4\">\r\n            { !!monthCount &&\r\n                <Fragment>\r\n                    <Title titles={ titles } monthCount={ monthCount } activeMonth={ activeMonth }\r\n                           setActiveMonth={ setActiveMonth }/>\r\n                    <Month data={ calendar[activeMonth] }/>\r\n                </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Calendar } from './Calendar';\r\nimport { ContextProvider } from './context';\r\n\r\nexport default function App({ data, shiftToDate, onDayClick }) {\r\n    return (\r\n        <ContextProvider value={ { onDayClick } }>\r\n            <Calendar data={ data } shiftToDate={ shiftToDate } />\r\n        </ContextProvider>\r\n    );\r\n}"],"names":["ucfirst","str","charAt","toUpperCase","slice","calcParamsMatrix","date","countDays","Date","getFullYear","getMonth","getDate","indexOfFirstDay","getDay","heightArray","Math","floor","Number","lastDayPrevMonth","startMonth","setMonth","startDay","getTitles","data","reduce","arr","el","push","getKeyMonth","currentYear","strMonth","toLocaleDateString","month","keyMonth","toString","DAY_STATE_NOT_AVAILABLE","DAY_STATE_DISABLE","DAY_STATE_ACTIVE","MonthStructure","days","daysTemp","prototype","init","today","i","Array","nextDay","setDate","day","state","Boolean","getTime","payload","addDay","dayNum","findIndex","processDays","k","length","j","dataProcessing","monthArray","arrForGenerateEmptyMonth","generateArrMonth","monthMap","Map","item","m","addMonth","set","get","from","map","err","console","warn","tmp","forEach","sort","firstYear","firstMonth","lastYear","lastMonth","y","startM","endM","Title","titles","monthCount","activeMonth","setActiveMonth","turnMonth","direction","getClasses","classes","React","Context","createContext","ContextProvider","children","value","notAvailableDay","disableDay","activeDay","dayClick","styledDays","Day","useContext","onDayClick","Week","Month","week","Calendar","shiftToDate","calendar","useMemo","initActiveMonth","keyMonthArray","useState","Fragment","App"],"mappings":"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"}